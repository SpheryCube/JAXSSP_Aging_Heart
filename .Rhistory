# Convert chr to an ordered factor
annot.mrna$chr <- factor(annot.mrna$chr,
levels=c(as.character(1:19),"X","Y","M"))
annot.protein$chr <- factor(annot.protein$ch,
levels=c(as.character(1:19),"X","Y","M"))
# Change some names
annot.mrna <- rename(annot.mrna, gene_id=id)
# This chunk of code was adapted from Gary Churchill's script
# Convert chr to an ordered factor
annot.mrna$chr <- factor(annot.mrna$chr,
levels=c(as.character(1:19),"X","Y","M"))
annot.protein$chr <- factor(annot.protein$ch,
levels=c(as.character(1:19),"X","Y","M"))
# Change some names
annot.mrna <- rename(annot.mrna, gene_id=id)
# This chunk of code was adapted from Gary Churchill's script
# Convert chr to an ordered factor
annot.mrna$chr <- factor(annot.mrna$chr,
levels=c(as.character(1:19),"X","Y","M"))
annot.protein$chr <- factor(annot.protein$ch,
levels=c(as.character(1:19),"X","Y","M"))
# Change some names
annot.mrna <- rename(annot.mrna, gene_id=id)
# This chunk of code was adapted from Gary Churchill's script
# Convert chr to an ordered factor
annot.mrna$chr <- factor(annot.mrna$chr,
levels=c(as.character(1:19),"X","Y","M"))
annot.protein$chr <- factor(annot.protein$ch,
levels=c(as.character(1:19),"X","Y","M"))
# Change some names
annot.mrna <- rename(annot.mrna, gene_id=id)
# This chunk of code was adapted from Gary Churchill's script
# Convert chr to an ordered factor
annot.mrna$chr <- factor(annot.mrna$chr,
levels=c(as.character(1:19),"X","Y","M"))
annot.protein$chr <- factor(annot.protein$ch,
levels=c(as.character(1:19),"X","Y","M"))
# Change some names
annot.mrna <- rename(annot.mrna, gene_id=id)
# This chunk of code was adapted from Gary Churchill's script
# Convert chr to an ordered factor
annot.mrna$chr <- factor(annot.mrna$chr,
levels=c(as.character(1:19),"X","Y","M"))
annot.protein$chr <- factor(annot.protein$ch,
levels=c(as.character(1:19),"X","Y","M"))
# Change some names
annot.mrna <- rename(annot.mrna, gene_id=id)
Nduf_subset_mrna <- annot.mrna %>% filter(str_detect(symbol, "Nduf"))
mrna_gene_ids <- Nduf_subset_mrna$gene_id
# For each gene, check if age and sex account for variability within the data
for(current_id in mrna_gene_ids){
expr_data <- expr.mrna[, current_id]  # Use ID as key to get expression data from the expr.mrna matrix
df <- cbind(annot.sample$Sex, annot.sample$Age, expr_data)
colnames(df) <- c("Sex", "Age", "expr")
df <- as.data.frame(df)
df <- mutate(df, sex_factor = factor(df$Sex))
levels(df$sex_factor) <- c("Female", "Male")
gene_row <- annot.mrna %>% filter(gene_id == current_id)
symbol = gene_row$symbol
# Perform t-test on sex
# Seperate groups
males <- df %>% filter(df$Sex == 1)
females <- df %>% filter(df$Sex == 2)
res.t <- t.test(x = males$expr, y = females$expr)
sex_p_value <- res.t$p.value
# Only plot if there is a significant result
if (sex_p_value < 0.05) {
print("-----------------------------------")
print(paste("Significance when grouped by sex:", symbol))
print(res.t)
plot_title <- paste("Age vs", symbol, "Expression (mRNA)", sep = " ")
plot_age <- ggplot(df, aes(x=factor(df$Age), y=expr, color=factor(df$Age))) +
geom_boxplot() +
geom_smooth(method = "lm", se = FALSE) + ggtitle(plot_title) +
ylab("Normalized Expression level") +
xlab("Age")
print(plot_age)
}
# Perform ANOVA on age
age_6 <- df %>% filter(df$Age == 6)
age_12 <- df %>% filter(df$Age == 12)
age_18 <- df %>% filter(df$Age == 18)
res.aov <- aov(df$expr ~ df$Age, data = df)
sum_obj <- summary(res.aov)
age_p_value <- sum_obj[[1]][, 5][1]
if (age_p_value < 0.05) {
print("-----------------------------------")
print(paste("Significance when grouped by age:", symbol))
print(sum_obj)
plot_title <- paste("Sex vs", symbol, "Expression (mRNA)", sep = " ")
plot_sex <- ggplot(df, aes(x=factor(df$Sex), y=expr, color=df$sex_factor)) +
geom_boxplot() +
geom_smooth(method = "lm", se = FALSE) +
ggtitle(plot_title) +
ylab("Normalized Expression level") +
xlab("Sex")
print(plot_sex)
}
if (age_p_value < 0.05 && sex_p_value < 0.05){
df$Age <- as.factor(df$Age)
summary_df <- summarySE(df, measurevar="expr", groupvars=c("sex_factor", "Age"))
plot <- ggplot(summary_df, aes(x=Age, y=expr, color = sex_factor, group = sex_factor)) +
geom_errorbar(aes(ymin=expr-se, ymax=expr+se), width=.1, position=position_dodge(0.1)) +
geom_line(position=position_dodge(0.1)) +
geom_point(position=position_dodge(0.1), size=3) +
ggtitle(label = paste(symbol, " Expression (mRNA)", sep = "")) +
ylab(label = "Normalized Expression Level") +
xlab(label = "Age (months)") +
labs(color = "Sex")
print(plot)
}
}
Nduf_subset_prot <- annot.protein %>% filter(str_detect(symbol, "Nduf"))
prot_gene_ids <- Nduf_subset_prot$protein_id
# For each protein ID create a new list
for(current_id in prot_gene_ids){
print("-----------------------------------")
print(paste("Significance when grouped by sex:", symbol))
print(res.t)
expr_data <- expr.protein[, current_id]  # Use ID as key to get expression data from the expr.mrna matrix
df <- cbind(annot.sample$Sex, annot.sample$Age, expr_data)
colnames(df) <- c("Sex", "Age", "expr")
df <- as.data.frame(df)
df <- mutate(df, sex_factor = factor(df$Sex))
levels(df$sex_factor) <- c("Female", "Male")
gene_row <- annot.protein %>% filter(protein_id == current_id)
symbol = gene_row$symbol
# Perform t-test on sex
# Seperate groups
males <- df %>% filter(df$Sex == 1)
females <- df %>% filter(df$Sex == 2)
res.t <- t.test(x = males$expr, y = females$expr)
# Only plot if there is a significant result
if (res.t$p.value < 0.05) {
print(res.t$p.value)
print(paste("Significance when grouped by sex:", symbol))
plot_title <- paste("Age vs", symbol, "Expression (protein)", sep = " ")
plot_age <- ggplot(df, aes(x=factor(df$Age), y=expr, color=factor(df$Age))) +
geom_boxplot() +
geom_smooth(method = "lm", se = FALSE) + ggtitle(plot_title) +
ylab("Normalized Expression level") +
xlab("Age")
print(plot_age)
}
# Perform ANOVA on age
age_6 <- df %>% filter(df$Age == 6)
age_12 <- df %>% filter(df$Age == 12)
age_18 <- df %>% filter(df$Age == 18)
res.aov <- aov(df$expr ~ df$Age, data = df)
sum_obj <- summary(res.aov)
p_value <- sum_obj[[1]][, 5][1]
if (p_value < 0.05) {
print("-----------------------------------")
print(paste("Significance when grouped by age:", symbol))
print(sum_obj)
print(symbol)
plot_title <- paste("Sex vs", symbol, "Expression (protein)", sep = " ")
plot_sex <- ggplot(df, aes(x=factor(df$Sex), y=expr, color=df$sex_factor)) +
geom_boxplot() +
geom_smooth(method = "lm", se = FALSE) +
ggtitle(plot_title) +
ylab("Normalized Expression level") +
xlab("Sex")
print(plot_sex)
}
if (age_p_value < 0.05 && sex_p_value < 0.05){
df$Age <- as.factor(df$Age)
summary_df <- summarySE(df, measurevar="expr", groupvars=c("sex_factor", "Age"))
plot <- ggplot(summary_df, aes(x=Age, y=expr, color = sex_factor, group = sex_factor)) +
geom_errorbar(aes(ymin=expr-se, ymax=expr+se), width=.1, position=position_dodge(0.1)) +
geom_line(position=position_dodge(0.1)) +
geom_point(position=position_dodge(0.1), size=3) +
ggtitle(label = paste(symbol, " Expression (mRNA)", sep = "")) +
ylab(label = "Normalized Expression Level") +
xlab(label = "Age (months)") +
labs(color = "Sex")
print(plot)
}
}
# Ndufaf4 (ubiquinone oxidoreductase complex assembly factor 4) is decreasing with age.
# Mutations in the gene can cause mitochondrial complex I deficiency (https://www.genecards.org/cgi-bin/carddisp.pl?gene=NDUFAF4)
# This can result in symptoms affecting the nervous system, the heart, and the skeletal muscles. (https://ghr.nlm.nih.gov/condition/mitochondrial-complex-i-deficiency)
# Ndufaf2 (ubiquinone oxidoreductase complex assembly factor 2) seems to be increasing with age. Codes for
# Note: ubiquinone oxidoreductase complex is located in the inner mitochondrial member in eurokaryotes.
# Ndufv3 is much less expressed in females than it is in males.
Nduf_subset_mrna <- annot.mrna %>% filter(str_detect(symbol, "Nduf"))
mrna_gene_ids <- Nduf_subset_mrna$gene_id
# For each gene, check if age and sex account for variability within the data
for(current_id in mrna_gene_ids){
expr_data <- expr.mrna[, current_id]  # Use ID as key to get expression data from the expr.mrna matrix
df <- cbind(annot.sample$Sex, annot.sample$Age, expr_data)
colnames(df) <- c("Sex", "Age", "expr")
df <- as.data.frame(df)
df <- mutate(df, sex_factor = factor(df$Sex))
levels(df$sex_factor) <- c("Female", "Male")
gene_row <- annot.mrna %>% filter(gene_id == current_id)
symbol = gene_row$symbol
# Perform t-test on sex
# Seperate groups
males <- df %>% filter(df$Sex == 1)
females <- df %>% filter(df$Sex == 2)
res.t <- t.test(x = males$expr, y = females$expr)
sex_p_value <- res.t$p.value
# Only plot if there is a significant result
if (sex_p_value < 0.05) {
print("-----------------------------------")
print(paste("Significance when grouped by sex:", symbol))
print(res.t)
plot_title <- paste("Age vs", symbol, "Expression (mRNA)", sep = " ")
plot_age <- ggplot(df, aes(x=factor(df$Age), y=expr, color=factor(df$Age))) +
geom_boxplot() +
geom_smooth(method = "lm", se = FALSE) + ggtitle(plot_title) +
ylab("Normalized Expression level") +
xlab("Age")
print(plot_age)
}
# Perform ANOVA on age
age_6 <- df %>% filter(df$Age == 6)
age_12 <- df %>% filter(df$Age == 12)
age_18 <- df %>% filter(df$Age == 18)
res.aov <- aov(df$expr ~ df$Age, data = df)
sum_obj <- summary(res.aov)
age_p_value <- sum_obj[[1]][, 5][1]
if (age_p_value < 0.05) {
print("-----------------------------------")
print(paste("Significance when grouped by age:", symbol))
print(sum_obj)
plot_title <- paste("Sex vs", symbol, "Expression (mRNA)", sep = " ")
plot_sex <- ggplot(df, aes(x=factor(df$Sex), y=expr, color=df$sex_factor)) +
geom_boxplot() +
geom_smooth(method = "lm", se = FALSE) +
ggtitle(plot_title) +
ylab("Normalized Expression level") +
xlab("Sex")
print(plot_sex)
}
if (age_p_value < 0.05 && sex_p_value < 0.05){
df$Age <- as.factor(df$Age)
summary_df <- summarySE(df, measurevar="expr", groupvars=c("sex_factor", "Age"))
plot <- ggplot(summary_df, aes(x=Age, y=expr, color = sex_factor, group = sex_factor)) +
geom_errorbar(aes(ymin=expr-se, ymax=expr+se), width=.1, position=position_dodge(0.1)) +
geom_line(position=position_dodge(0.1)) +
geom_point(position=position_dodge(0.1), size=3) +
ggtitle(label = paste(symbol, " Expression (mRNA)", sep = "")) +
ylab(label = "Normalized Expression Level") +
xlab(label = "Age (months)") +
labs(color = "Sex")
print(plot)
}
}
Nduf_subset_mrna <- annot.mrna %>% filter(str_detect(symbol, "Nduf"))
mrna_gene_ids <- Nduf_subset_mrna$gene_id
# For each gene, check if age and sex account for variability within the data
for(current_id in mrna_gene_ids){
expr_data <- expr.mrna[, current_id]  # Use ID as key to get expression data from the expr.mrna matrix
df <- cbind(annot.sample$Sex, annot.sample$Age, expr_data)
colnames(df) <- c("Sex", "Age", "expr")
df <- as.data.frame(df)
df <- mutate(df, sex_factor = factor(df$Sex))
levels(df$sex_factor) <- c("Female", "Male")
gene_row <- annot.mrna %>% filter(gene_id == current_id)
symbol = gene_row$symbol
# Perform t-test on sex
# Seperate groups
males <- df %>% filter(df$Sex == 1)
females <- df %>% filter(df$Sex == 2)
res.t <- t.test(x = males$expr, y = females$expr)
sex_p_value <- res.t$p.value
# Only plot if there is a significant result
if (sex_p_value < 0.05) {
print("-----------------------------------")
print(paste("Significance when grouped by sex:", symbol))
print(res.t)
plot_title <- paste("Age vs", symbol, "Expression (mRNA)", sep = " ")
plot_age <- ggplot(df, aes(x=factor(df$Age), y=expr, color=factor(df$Age))) +
geom_boxplot() +
geom_smooth(method = "lm", se = FALSE) + ggtitle(plot_title) +
ylab("Normalized Expression level") +
xlab("Age")
print(plot_age)
}
# Perform ANOVA on age
age_6 <- df %>% filter(df$Age == 6)
age_12 <- df %>% filter(df$Age == 12)
age_18 <- df %>% filter(df$Age == 18)
res.aov <- aov(df$expr ~ df$Age, data = df)
sum_obj <- summary(res.aov)
age_p_value <- sum_obj[[1]][, 5][1]
if (age_p_value < 0.05) {
print("-----------------------------------")
print(paste("Significance when grouped by age:", symbol))
print(sum_obj)
plot_title <- paste("Sex vs", symbol, "Expression (mRNA)", sep = " ")
plot_sex <- ggplot(df, aes(x=factor(df$Sex), y=expr, color=df$sex_factor)) +
geom_boxplot() +
geom_smooth(method = "lm", se = FALSE) +
ggtitle(plot_title) +
ylab("Normalized Expression level") +
xlab("Sex")
print(plot_sex)
}
if (age_p_value < 0.05 && sex_p_value < 0.05){
df$Age <- as.factor(df$Age)
summary_df <- summarySE(df, measurevar="expr", groupvars=c("sex_factor", "Age"))
plot <- ggplot(summary_df, aes(x=Age, y=expr, color = sex_factor, group = sex_factor)) +
geom_errorbar(aes(ymin=expr-se, ymax=expr+se), width=.1, position=position_dodge(0.1)) +
geom_line(position=position_dodge(0.1)) +
geom_point(position=position_dodge(0.1), size=3) +
ggtitle(label = paste(symbol, " Expression (mRNA)", sep = "")) +
ylab(label = "Normalized Expression Level") +
xlab(label = "Age (months)") +
labs(color = "Sex")
print(plot)
}
}
Nduf_subset_mrna <- annot.mrna %>% filter(str_detect(symbol, "Nduf"))
mrna_gene_ids <- Nduf_subset_mrna$gene_id
# For each gene, check if age and sex account for variability within the data
for(current_id in mrna_gene_ids){
expr_data <- expr.mrna[, current_id]  # Use ID as key to get expression data from the expr.mrna matrix
df <- cbind(annot.sample$Sex, annot.sample$Age, expr_data)
colnames(df) <- c("Sex", "Age", "expr")
df <- as.data.frame(df)
df <- mutate(df, sex_factor = factor(df$Sex))
levels(df$sex_factor) <- c("Female", "Male")
gene_row <- annot.mrna %>% filter(gene_id == current_id)
symbol = gene_row$symbol
# Perform t-test on sex
# Seperate groups
males <- df %>% filter(df$Sex == 1)
females <- df %>% filter(df$Sex == 2)
res.t <- t.test(x = males$expr, y = females$expr)
sex_p_value <- res.t$p.value
# Only plot if there is a significant result
if (sex_p_value < 0.05) {
print("-----------------------------------")
print(paste("Significance when grouped by sex:", symbol))
print(res.t)
plot_title <- paste("Age vs", symbol, "Expression (mRNA)", sep = " ")
plot_age <- ggplot(df, aes(x=factor(df$Age), y=expr, color=factor(df$Age))) +
geom_boxplot() +
geom_smooth(method = "lm", se = FALSE) + ggtitle(plot_title) +
ylab("Normalized Expression level") +
xlab("Age")
print(plot_age)
}
# Perform ANOVA on age
age_6 <- df %>% filter(df$Age == 6)
age_12 <- df %>% filter(df$Age == 12)
age_18 <- df %>% filter(df$Age == 18)
res.aov <- aov(df$expr ~ df$Age, data = df)
sum_obj <- summary(res.aov)
age_p_value <- sum_obj[[1]][, 5][1]
if (age_p_value < 0.05) {
print("-----------------------------------")
print(paste("Significance when grouped by age:", symbol))
print(sum_obj)
plot_title <- paste("Sex vs", symbol, "Expression (mRNA)", sep = " ")
plot_sex <- ggplot(df, aes(x=factor(df$Sex), y=expr, color=df$sex_factor)) +
geom_boxplot() +
geom_smooth(method = "lm", se = FALSE) +
ggtitle(plot_title) +
ylab("Normalized Expression level") +
xlab("Sex")
print(plot_sex)
}
if (age_p_value < 0.05 && sex_p_value < 0.05){
df$Age <- as.factor(df$Age)
summary_df <- summarySE(df, measurevar="expr", groupvars=c("sex_factor", "Age"))
plot <- ggplot(summary_df, aes(x=Age, y=expr, color = sex_factor, group = sex_factor)) +
geom_errorbar(aes(ymin=expr-se, ymax=expr+se), width=.1, position=position_dodge(0.1)) +
geom_line(position=position_dodge(0.1)) +
geom_point(position=position_dodge(0.1), size=3) +
ggtitle(label = paste(symbol, " Expression (mRNA)", sep = "")) +
ylab(label = "Normalized Expression Level") +
xlab(label = "Age (months)") +
labs(color = "Sex")
print(plot)
}
}
Nduf_subset_mrna <- annot.mrna %>% filter(str_detect(symbol, "Nduf"))
mrna_gene_ids <- Nduf_subset_mrna$gene_id
# For each gene, check if age and sex account for variability within the data
for(current_id in mrna_gene_ids){
expr_data <- expr.mrna[, current_id]  # Use ID as key to get expression data from the expr.mrna matrix
df <- cbind(annot.sample$Sex, annot.sample$Age, expr_data)
colnames(df) <- c("Sex", "Age", "expr")
df <- as.data.frame(df)
df <- mutate(df, sex_factor = factor(df$Sex))
levels(df$sex_factor) <- c("Female", "Male")
gene_row <- annot.mrna %>% filter(gene_id == current_id)
symbol = gene_row$symbol
# Perform t-test on sex
# Seperate groups
males <- df %>% filter(df$Sex == 1)
females <- df %>% filter(df$Sex == 2)
res.t <- t.test(x = males$expr, y = females$expr)
sex_p_value <- res.t$p.value
# Only plot if there is a significant result
if (sex_p_value < 0.05) {
print("-----------------------------------")
print(paste("Significance when grouped by sex:", symbol))
print(res.t)
plot_title <- paste("Age vs", symbol, "Expression (mRNA)", sep = " ")
plot_age <- ggplot(df, aes(x=factor(df$Age), y=expr, color=factor(df$Age))) +
geom_boxplot() +
geom_smooth(method = "lm", se = FALSE) + ggtitle(plot_title) +
ylab("Normalized Expression level") +
xlab("Age")
print(plot_age)
}
# Perform ANOVA on age
age_6 <- df %>% filter(df$Age == 6)
age_12 <- df %>% filter(df$Age == 12)
age_18 <- df %>% filter(df$Age == 18)
res.aov <- aov(df$expr ~ df$Age, data = df)
sum_obj <- summary(res.aov)
age_p_value <- sum_obj[[1]][, 5][1]
if (age_p_value < 0.05) {
print("-----------------------------------")
print(paste("Significance when grouped by age:", symbol))
print(sum_obj)
plot_title <- paste("Sex vs", symbol, "Expression (mRNA)", sep = " ")
plot_sex <- ggplot(df, aes(x=factor(df$Sex), y=expr, color=df$sex_factor)) +
geom_boxplot() +
geom_smooth(method = "lm", se = FALSE) +
ggtitle(plot_title) +
ylab("Normalized Expression level") +
xlab("Sex")
print(plot_sex)
}
if (age_p_value < 0.05 && sex_p_value < 0.05){
df$Age <- as.factor(df$Age)
summary_df <- summarySE(df, measurevar="expr", groupvars=c("sex_factor", "Age"))
plot <- ggplot(summary_df, aes(x=Age, y=expr, color = sex_factor, group = sex_factor)) +
geom_errorbar(aes(ymin=expr-se, ymax=expr+se), width=.1, position=position_dodge(0.1)) +
geom_line(position=position_dodge(0.1)) +
geom_point(position=position_dodge(0.1), size=3) +
ggtitle(label = paste(symbol, " Expression (mRNA)", sep = "")) +
ylab(label = "Normalized Expression Level") +
xlab(label = "Age (months)") +
labs(color = "Sex")
print(plot)
}
}
Nduf_subset_mrna <- annot.mrna %>% filter(str_detect(symbol, "Nduf"))
mrna_gene_ids <- Nduf_subset_mrna$gene_id
Nduf_subset_mrna <- annot.mrna %>% filter(str_detect(symbol, "Nduf"))
mrna_gene_ids <- Nduf_subset_mrna$gene_id
# For each gene, check if age and sex account for variability within the data
for(current_id in mrna_gene_ids){
expr_data <- expr.mrna[, current_id]  # Use ID as key to get expression data from the expr.mrna matrix
df <- cbind(annot.sample$Sex, annot.sample$Age, expr_data)
colnames(df) <- c("Sex", "Age", "expr")
df <- as.data.frame(df)
df <- mutate(df, sex_factor = factor(df$Sex))
levels(df$sex_factor) <- c("Female", "Male")
gene_row <- annot.mrna %>% filter(gene_id == current_id)
symbol = gene_row$symbol
# Perform t-test on sex
# Seperate groups
males <- df %>% filter(df$Sex == 1)
females <- df %>% filter(df$Sex == 2)
res.t <- t.test(x = males$expr, y = females$expr)
sex_p_value <- res.t$p.value
# Only plot if there is a significant result
if (sex_p_value < 0.05) {
print("-----------------------------------")
print(paste("Significance when grouped by sex:", symbol))
print(res.t)
plot_title <- paste("Age vs", symbol, "Expression (mRNA)", sep = " ")
plot_age <- ggplot(df, aes(x=factor(df$Age), y=expr, color=factor(df$Age))) +
geom_boxplot() +
geom_smooth(method = "lm", se = FALSE) + ggtitle(plot_title) +
ylab("Normalized Expression level") +
xlab("Age")
print(plot_age)
}
# Perform ANOVA on age
age_6 <- df %>% filter(df$Age == 6)
age_12 <- df %>% filter(df$Age == 12)
age_18 <- df %>% filter(df$Age == 18)
res.aov <- aov(df$expr ~ df$Age, data = df)
sum_obj <- summary(res.aov)
age_p_value <- sum_obj[[1]][, 5][1]
if (age_p_value < 0.05) {
print("-----------------------------------")
print(paste("Significance when grouped by age:", symbol))
print(sum_obj)
plot_title <- paste("Sex vs", symbol, "Expression (mRNA)", sep = " ")
plot_sex <- ggplot(df, aes(x=factor(df$Sex), y=expr, color=df$sex_factor)) +
geom_boxplot() +
geom_smooth(method = "lm", se = FALSE) +
ggtitle(plot_title) +
ylab("Normalized Expression level") +
xlab("Sex")
print(plot_sex)
}
if (age_p_value < 0.05 && sex_p_value < 0.05){
df$Age <- as.factor(df$Age)
summary_df <- summarySE(df, measurevar="expr", groupvars=c("sex_factor", "Age"))
plot <- ggplot(summary_df, aes(x=Age, y=expr, color = sex_factor, group = sex_factor)) +
geom_errorbar(aes(ymin=expr-se, ymax=expr+se), width=.1, position=position_dodge(0.1)) +
geom_line(position=position_dodge(0.1)) +
geom_point(position=position_dodge(0.1), size=3) +
ggtitle(label = paste(symbol, " Expression (mRNA)", sep = "")) +
ylab(label = "Normalized Expression Level") +
xlab(label = "Age (months)") +
labs(color = "Sex")
print(plot)
}
}
